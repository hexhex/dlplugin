AUTOMAKE_OPTIONS = foreign

# clean autogenerated files
MAINTAINERCLEANFILES = \
HexDLParser.hpp \
HexDLParser.output \
RacerAnswerParser.hpp \
RacerAnswerParser.output \
location.hh \
position.hh \
stack.hh

# automake is not aware of those autogenerated files
EXTRA_DIST = \
HexDLScanner.cpp \
HexDLParser.cpp \
HexDLParser.hpp \
RacerAnswerScanner.cpp \
RacerAnswerParser.cpp \
RacerAnswerParser.hpp \
location.hh \
position.hh \
stack.hh


# before we package ourselves, we add FlexLexer.h to the distribution directory
dist-hook:
	$(LN_S) @FLEXLEXER_H@ $(top_distdir)/src


dlvhexlib_LTLIBRARIES = libdlvhexracer.la
libdlvhexracer_la_SOURCES = \
Answer.cpp \
AtomSeparator.cpp \
Cache.cpp \
DLOptimizer.cpp \
DLQuery.cpp \
HexDLParser.ypp \
HexDLScanner.lpp \
HexDLDriver.cpp \
HexDLRewriter.cpp \
LogBuf.cpp \
OWLParser.cpp \
Ontology.cpp \
Query.cpp \
QueryCtx.cpp \
QueryDirector.cpp \
RacerAnswerParser.ypp \
RacerAnswerScanner.lpp \
RacerAnswerDriver.cpp \
RacerBuilder.cpp \
RacerExtAtom.cpp \
RacerInterface.cpp \
RacerKBManager.cpp \
RacerNRQL.cpp \
RacerNRQLBuilder.cpp \
RacerQueryExpr.cpp \
Registry.cpp \
TCPStream.cpp \
URI.cpp

#
# in maintainer-mode we check for a sufficient version of the bison/flex combo
#

# minimum bison version
BISON_MAJOR=2
BISON_MINOR=2

# minimum flex version
FLEX_MAJOR=2
FLEX_MINOR=5
FLEX_MICRO=33

#
# don't let automake rename and move the output files of flex/bison,
# this doesn't work for pure C++ parser (yet)
#
.lpp.cpp:
	@flex_version=`$(LEX) --version 2>&1 | sed -ne 's/^.*flex[^0-9]*//p'` ; \
	declare -i flex_major ; \
	declare -i flex_minor ; \
	declare -i flex_micro ; \
	flex_major=`echo $$flex_version | sed "s/^\([0-9]*\).\([0-9]*\).\([0-9]*\)/\1/"` ; \
	flex_minor=`echo $$flex_version | sed "s/^\([0-9]*\).\([0-9]*\).\([0-9]*\)/\2/"` ; \
	flex_micro=`echo $$flex_version | sed "s/^\([0-9]*\).\([0-9]*\).\([0-9]*\)/\3/"` ; \
	if test $$flex_major -lt $(FLEX_MAJOR) || test $$flex_minor -lt $(FLEX_MINOR) || test $$flex_micro -lt $(FLEX_MICRO); then \
		echo Wrong version of flex installed: $$flex_version, I need at least $(FLEX_MAJOR).$(FLEX_MINOR).$(FLEX_MICRO) ; \
		exit 1 ;\
	fi
	$(LEXCOMPILE) -o $@ $<

.ypp.cpp:
	@bison_version=`$(YACC) --version 2>&1 | sed -ne 's/^.*GNU Bison[^0-9]*//p'` ; \
	declare -i bison_major ; \
	declare -i bison_minor ; \
	bison_major=`echo $$bison_version | sed "s/^\([0-9]*\).\([0-9]*\)/\1/"` ; \
	bison_minor=`echo $$bison_version | sed "s/^\([0-9]*\).\([0-9]*\)/\2/"` ; \
	if test $$bison_major -lt $(BISON_MAJOR) || test $$bison_minor -lt $(BISON_MINOR); then \
		echo Wrong version of bison installed: $$bison_version, I need at least $(BISON_MAJOR).$(BISON_MINOR) ; \
		exit 1 ;\
	fi
	$(YACCCOMPILE) -o $@ $<


AM_CPPFLAGS = \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/src \
	$(RAPTOR_CFLAGS) \
	$(DLVHEX_CFLAGS)

# -avoid-version: only create libdlvhexracer.so
# -module: library will be dlopened
# -no-undefined: windows dlls don't allow undefined external symbols
#libdlvhexracer_la_LDFLAGS = -avoid-version -module -no-undefined $(RAPTOR_LIBS)
libdlvhexracer_la_LDFLAGS = -avoid-version -module $(RAPTOR_LIBS)


#
# adapt path and dependency libraries as needed
#
RAPTOR_PATH = $(HOME)/local/lib
RAPTOR_STATIC_LIBS =  -lxml2 -lxslt -lcurl $(RAPTOR_PATH)/libraptor.a

libdlvhexracer-static.la: $(libdlvhexracer_la_OBJECTS)
	$(CXXLINK) -avoid-version -module -rpath $(dlvhexlibdir) $(libdlvhexracer_la_OBJECTS) $(RAPTOR_STATIC_LIBS)

install-static: libdlvhexracer-static.la
	$(LIBTOOL) --mode=install $(INSTALL) -s libdlvhexracer-static.la $(DESTDIR)$(dlvhexlibdir)/libdlvhexracer-static.la

uninstall-static:
	$(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(dlvhexlibdir)/libdlvhexracer-static.la
